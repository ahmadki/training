model:
  base_learning_rate: 1.0e-4
  target: ldm.models.diffusion.ddpm.LatentDiffusion
  params:
    parameterization: "v"
    linear_start: 0.00085
    linear_end: 0.0120
    num_timesteps_cond: 1
    log_every_t: 200
    timesteps: 1000
    first_stage_key: jpg
    cond_stage_key: txt
    image_size: 64
    channels: 4
    cond_stage_trainable: false
    conditioning_key: crossattn
    monitor: steps
    scale_factor: 0.18215
    use_ema: True

    scheduler_config: # 10000 warmup steps
      target: ldm.lr_scheduler.LambdaLinearScheduler
      params:
        warm_up_steps: [ 10000 ]
        cycle_lengths: [ 10000000000000 ] # incredibly large number to prevent corner cases
        f_start: [ 1.e-6 ]
        f_max: [ 1.e-4 ]
        f_min: [ 1.e-10 ]

    unet_config:
      target: ldm.modules.diffusionmodules.openaimodel.UNetModel
      params:
        use_checkpoint: True # gradient checkpointing
        use_fp16: True
        image_size: 32
        in_channels: 4
        out_channels: 4
        model_channels: 320
        attention_resolutions: [ 4, 2, 1 ]
        num_res_blocks: 2
        channel_mult: [ 1, 2, 4, 4 ]
        num_head_channels: 64 # need to fix for flash-attn
        use_spatial_transformer: True
        use_linear_in_transformer: True
        transformer_depth: 1
        context_dim: 1024
        legacy: False

    first_stage_config:
      target: ldm.models.autoencoder.AutoencoderKL
      params:
        embed_dim: 4
        monitor: val/rec_loss
        ddconfig:
          #attn_type: "vanilla-xformers"
          double_z: true
          z_channels: 4
          resolution: 256
          in_channels: 3
          out_ch: 3
          ch: 128
          ch_mult:
          - 1
          - 2
          - 4
          - 4
          num_res_blocks: 2
          attn_resolutions: []
          dropout: 0.0
        lossconfig:
          target: torch.nn.Identity

    cond_stage_config:
      target: ldm.modules.encoders.modules.FrozenOpenCLIPEmbedder
      params:
        arch: "ViT-H-14"
        version: "laion2b_s32b_b79k"
        freeze: True
        layer: "penultimate"

data:
    target: ldm.data.webdatasets.DataModuleFromWebDataloaders
    params:
      train:
        target: ldm.data.webdatasets.build_webdataloader
        params:
          urls: /datasets/laion2B-en-aesthetic/{00000..00004}.tar
          batch_size: 8
          shuffle: 1000
          partial: False
          # metadata_filters:
          #   - target: ldm.data.webdatasets.metadata_filter
          #     params:
          #       key: "aesthetic"
          #       predicate: gte
          #       value: 10
          keep_only_keys: ["jpg", "txt"]
          image_transforms:
            - target: torchvision.transforms.ToTensor
            - target: torchvision.transforms.RandomResizedCrop
              params:
                size: 512
                interpolation: bicubic
            # TODO(ahmadki): modify the SD pieline to take chw format (what pytorch nativly uses)
            - target: ldm.data.webdatasets.rearrange_transform
              params:
                pattern: 'c h w -> h w c'
          # txt_transforms:
          num_workers: 2
          # cache_size:
          # cache_dir:
          persistent_workers: True

lightning:
  trainer:
    accelerator: 'gpu'
    num_nodes: 1
    devices: 8
    precision: 16
    logger: True
    log_every_n_steps: 5
    enable_progress_bar: True
    max_steps: 100
    # val_check_interval:
    # inference_mode:
    # resume_from_checkpoint:
    enable_checkpointing: True
    strategy:
      target: strategies.DDPStrategy
      params:
        find_unused_parameters: False

  modelcheckpoint:
    target: lightning.pytorch.callbacks.ModelCheckpoint
    params:
      save_top_k: -1
      every_n_train_steps: 100
      #  train_time_interval: None
